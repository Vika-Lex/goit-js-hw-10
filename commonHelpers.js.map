{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\n\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst refs = {\n  startBtn: document.querySelector('button[data-start]'),\n  input: document.querySelector('#datetime-picker'),\n  days: document.querySelector('span[data-days]'),\n  hours: document.querySelector('span[data-hours]'),\n  minutes: document.querySelector('span[data-minutes]'),\n  seconds: document.querySelector('span[data-seconds]'),\n};\n\nrefs.startBtn.addEventListener('click', onClickStartBtn);\n\nconst optionsFlatpicker = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    if (userSelectedDate.getTime() < Date.now()) {\n      refs.startBtn.disabled = true;\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n    } else {\n      currentTime = userSelectedDate.getTime() - Date.now();\n      refs.startBtn.disabled = false;\n    }\n  },\n};\n\nlet userSelectedDate = '';\nlet currentTime = '';\nflatpickr('#datetime-picker', optionsFlatpicker);\n\nfunction onClickStartBtn(event) {\n  refs.startBtn.disabled = true;\n  setInterval(() => {\n    let result = convertMs(currentTime);\n    refs.days.textContent = addLeadingZero(result.days);\n    refs.hours.textContent = addLeadingZero(result.hours);\n    refs.minutes.textContent = addLeadingZero(result.minutes);\n    refs.seconds.textContent = addLeadingZero(result.seconds);\n    currentTime -= 1000;\n  }, 1000);\n}\n\nfunction addLeadingZero(value) {\n  if (value <= 9) {\n    return String(value).padStart(2, '0');\n  }\n  return value;\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["refs","onClickStartBtn","optionsFlatpicker","selectedDates","userSelectedDate","iziToast","currentTime","flatpickr","event","result","convertMs","addLeadingZero","value","ms","days","hours","minutes","seconds"],"mappings":"+IAMA,MAAMA,EAAO,CACX,SAAU,SAAS,cAAc,oBAAoB,EACrD,MAAO,SAAS,cAAc,kBAAkB,EAChD,KAAM,SAAS,cAAc,iBAAiB,EAC9C,MAAO,SAAS,cAAc,kBAAkB,EAChD,QAAS,SAAS,cAAc,oBAAoB,EACpD,QAAS,SAAS,cAAc,oBAAoB,CACtD,EAEAA,EAAK,SAAS,iBAAiB,QAASC,CAAe,EAEvD,MAAMC,EAAoB,CACxB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBC,EAAmBD,EAAc,CAAC,EAE9BC,EAAiB,QAAO,EAAK,KAAK,IAAG,GACvCJ,EAAK,SAAS,SAAW,GACzBK,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,IAEDC,EAAcF,EAAiB,QAAS,EAAG,KAAK,IAAG,EACnDJ,EAAK,SAAS,SAAW,GAE5B,CACH,EAEA,IAAII,EAAmB,GACnBE,EAAc,GAClBC,EAAU,mBAAoBL,CAAiB,EAE/C,SAASD,EAAgBO,EAAO,CAC9BR,EAAK,SAAS,SAAW,GACzB,YAAY,IAAM,CAChB,IAAIS,EAASC,EAAUJ,CAAW,EAClCN,EAAK,KAAK,YAAcW,EAAeF,EAAO,IAAI,EAClDT,EAAK,MAAM,YAAcW,EAAeF,EAAO,KAAK,EACpDT,EAAK,QAAQ,YAAcW,EAAeF,EAAO,OAAO,EACxDT,EAAK,QAAQ,YAAcW,EAAeF,EAAO,OAAO,EACxDH,GAAe,GAChB,EAAE,GAAI,CACT,CAEA,SAASK,EAAeC,EAAO,CAC7B,OAAIA,GAAS,EACJ,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,EAE/BA,CACT,CAEA,SAASF,EAAUG,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}